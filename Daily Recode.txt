Timestamp: 2016-11-23 10:20
学习photon-Server：
坑：
1.端口占用，导致我的udp用不了。在配置文件中重设udp端口就行了。
2.小结：
    服务端Application继承ApplicationBase
    服务端peer继承ClientPeer
    客户端listener继承接口IPhotonPeerListener
    传递数据，通过Dictionary。
    需定义Protocol(协议)类型包括
        ErrorCode
        OperationCode
        ParameterCode

11-23之前还记得的事：
1.新开一个Network类，基于有回调的请求。
2.实现数据加载功能，基于有回调的请求。
3.多次使用Action，终于知道，Action做的事只是，委托一个函数，而不用显示的声明委托。
4.初次涉及泛型方法，感觉很好用，当我这个函数，所需要的参数是各种类型的，就可以用泛型方法。
5.自定义一个标签页控件。
6.整理代码，去掉没有用的接口。
7.编写项目使用的PanelManager管理类。
功能：打开
      关闭
      返回大厅
      返回
      不具有加载功能



Timestamp: 2016-11-13 19:04
1.开启了一个新的线程，加个死循环，让其一直运作，直到达到某种条件，或者完成某个异步任务之后，跳出循环，执行后续功能，结束线程。
达到了我的需求：当线程运作的时候，按钮灰色，结束运作的时候，恢复。
2.创建一个新线程最简单的方式是，创建一个异步委托。

Timestamp: 2016-10-28 17:15
一个星期做的事：
1.接口复习。
2.枚举复习。
3.写了基于UI的屏幕箭头引导，踩过的坑：
    计算屏幕之外的物体，与屏幕边界的交点：当物体不在摄像机范围内的时候，会自动出现在基于摄像机对称的另一头。要做判断。一半情况出现在，左边界下半部分，右边界下半部分，整个下边界。原因，当物体Z坐标小于0的时候，物体在摄像机之外。
    坐标系转换：世界->视口->屏幕->parentPixels->用localPosition设置
    坐标系转换，当需要将世界坐标点转成，用于UI的屏幕坐标点的时候，用NGUI自带的NGUIMath中的函数解决。
    一个物体在旋转，另外一个附在他身上的物体，不旋转：在旋转物体的一个点，加上空物体，这个点就是需要放置不旋转物体的点。解决方法，当物体旋转完成后，改变空物体的父节点，取得改变之后的localPosition,然后用于设置不旋转物体的localPosition，再将空物体的父节点设置为原来的旋转物体。
    不同屏幕的适配问题：用NGUIMath中的函数解决。parentPixels。


Timestamp: 2016-10-20 23:44
1.mvc 框架已经完成，并能跑通逻辑，遇到的问题是，如何取一个类或者是继承mono..类的接口对象。
2.多个相机的使用，可以看到想看的那个layer的东西，

Timestamp: 2016-10-20 00:35
1.XW项目用户信息界面，完成view的部分，部分model,controller还没动，
2.学习了c#自身的system.serializable,和unity的serializaField发现序列化原来是这样用的，以前都是不知所云。用了序列化之后，unity的整个ui构架就全出来了，mvc的方式运用的相当完美。
3.还有一个就是接口一定要先声明完，定义完，再引用，不然会出错。
4.嗯，in the future，i will write with english.

Timestamp: 2016-10-18 23:32
1.博客写了一半。
2.用户信息UI已经完成大半。
3.知道了unity中anchor的用法。
4.知道了scrollview的设置间隔方法，直接设置grid的cell height就行了
5.知道了unity中多个相机的使用方法，给UI分Layer,然后让某个相机只显示某个Layer就实现了多个相机的使用，
6.目前不知道的是unity中是怎么做到裁剪的，这个有时间要研究下，应该放到Todo

Timestamp: 2016-10-17 15:26
1.learn the EventHandler<T>
2.learn IEnumerator
3.known the design mode of the xword's ui 
4.learn the fiber

Timestamp: 2016-10-17 00:19
1.加入百度谷歌站点
2.本地文件夹分类
3.快速提交博客快捷键
4.修改博客字体，页脚，标题等
5.关于搭建博客算是告一段落

Timestamp: 2016-10-16 01:52
1.用github+hexo建立了自己的博客
2.实现了用vim创建md，生成文件头。
3.链接github和微博。

Timestamp: 2016-10-14 18:41
1.根据目标点，信息，在护送进度条上显示
（遇到的问题：List<>为引用类型，如果只new一次，却频繁add和clear,会导致之前的值无效，因为他是引用类型。
解决方法：1.用一次new一次。
            2.用当前List<>作为新List<>构造函数的参数new一个临时的List<>,得到的就是新的List<>并且带有旧的List<>的值，和旧的无关。）
2.从masterData中取值，直接用photon的dll库中的相关接口就行，相当方便。
3.写了一个启动的批处理，效果是先拉取github上最新的TODO,并用gvim打开。
4.完成vim与git的结合，并创建<f1><f2><f3><f4>和,<f1>作为操作git的快捷键。
5.创建快速保存快捷键w/

Timestamp: 2016-10-13 22:03
1.了解了ngui 数据绑定脚本的使用。
2.了解了Xw的ui实现方式。
3.了解了Xw基本的网络通信方式。
4.实现了护送进度条。
5.熟悉github创建仓库和提交本地代码
6.把日志和todo都放到github随时随地更改一份就行
7.vim添加git插件

Timestamp: 2016-10-13 00:25
1.了解了android文件权限
2.完成客户端请求服务端，并用unity实现
3.安装mysql和mysql-front
4.创建了一个数据库，添加了一个表

Timestamp: 2016-10-12 00:23
1.了解了一下手势插件
2.看到了xword的UI界面是自己写了一个UI类。
3.初步学习了一下photonserver，成功启动ChatServer

Timestamp: 2016-10-11 01:03
1.了解了一些vim的脚本语言
2.增加了，更改透明度
3.增加了，平台识别
4.增加了，用户路径
5.增加了，全屏切换
        
Timestamp: 2016-10-10 00:35
1.YouCompleteMe安装成功
2.成功支持c#,语法补全和各种功能
3.配色修改

Timestamp: 2016-10-08 00:34
1.设置日志类型文件的时间戳快捷键
2.安装ycm,然而没有成功：
YouCompleteMe unavailable: requires Vim compiled with Python 
(2.6+ or 3.3+) support
原因不详

Timestamp: 2016-10-07 01:39
配置vim,实现功能：
1.高亮
2.缩进
3.模板
    txt时间戳模板，写日志用
4.gvim界面设置：字体，airline,tabline
    隐藏不必要界面，主题更换
5.符号自动补全
6.vim实现系统剪切板
7.不生成不必要文件
8.禁用方向键
9.窗口启动位置
10.搜索高亮


Old:
Timestamp: 2016-10-12 18:35
1.调查Android的读写权限问题
2.调查部分目前荣耀4x不能创建文件夹的原因
3.修改重进战场，特殊技能一瞬间启动问题
4.写了player的三个文档
5.看了手势插件的代码

2016/9/26
1.做了资源导出工具。
用到知识点：注册表的写入和读取。
2016/9/27
1.看代码。
2016/9/28
1.调人物技能
了解数据表的使用，和技能施放流程。
了解知识：singleton模版
	  SceneMain模版
2016/9/29
1.场景加载
了解知识点：IEnumerator详解

2016/10/9
1.写player文档，熟悉代码。
2.修复重进战场，技能瞬间启动的bug
3.检测发布Android简体中文后字体问题。

2016/10/10
1.完成player的文档编写。
